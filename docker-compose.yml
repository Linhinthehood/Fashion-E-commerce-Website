version: '3.8'

services:
  # MongoDB Database
  mongodb:
    image: mongo:7.0
    container_name: fashion_ecommerce_mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: fashion_ecommerce
    volumes:
      - mongodb_data:/data/db
      - ./docker/mongodb/init:/docker-entrypoint-initdb.d
    networks:
      - fashion_network

  # User Service
  user-service:
    build:
      context: ./services/user-service
      dockerfile: Dockerfile
    container_name: fashion_ecommerce_user_service
    restart: unless-stopped
    ports:
      - "3001:3001"
    environment:
      - PORT=3001
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/fashion_ecommerce_users?authSource=admin
      - JWT_SECRET=your_super_secret_jwt_key_here_change_in_production
      - JWT_EXPIRE=7d
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - mongodb
    networks:
      - fashion_network
    volumes:
      - ./services/user-service:/app
      - /app/node_modules

  # Product Service
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: fashion_ecommerce_product_service
    restart: unless-stopped
    ports:
      - "3002:3002"
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/fashion_ecommerce_products?authSource=admin
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:3000
    depends_on:
      - mongodb
    networks:
      - fashion_network
    volumes:
      - ./services/product-service:/app
      - /app/node_modules

  # Order Service
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: fashion_ecommerce_order_service
    restart: unless-stopped
    ports:
      - "3003:3003"
    environment:
      - PORT=3003
      - MONGODB_URI=mongodb://admin:password123@mongodb:27017/fashion_ecommerce_orders?authSource=admin
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:3000
      - USER_SERVICE_URL=http://user-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
    depends_on:
      - mongodb
      - user-service
      - product-service
    networks:
      - fashion_network
    volumes:
      - ./services/order-service:/app
      - /app/node_modules

  # API Gateway
  api-gateway:
    build:
      context: ./services/api-gateway
      dockerfile: Dockerfile
    container_name: fashion_ecommerce_api_gateway
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - PORT=3000
      - NODE_ENV=development
      - FRONTEND_URL=http://localhost:3000
      - USER_SERVICE_URL=http://user-service:3001
      - PRODUCT_SERVICE_URL=http://product-service:3002
      - ORDER_SERVICE_URL=http://order-service:3003
    depends_on:
      - user-service
      - product-service
      - order-service
    networks:
      - fashion_network
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules

  # Frontend (Development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fashion_ecommerce_frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - REACT_APP_API_URL=http://localhost:3000/api
    depends_on:
      - api-gateway
    networks:
      - fashion_network

  # MongoDB Express (Database Admin UI)
  mongo-express:
    image: mongo-express:1.0.0
    container_name: fashion_ecommerce_mongo_express
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: admin
      ME_CONFIG_MONGODB_ADMINPASSWORD: password123
      ME_CONFIG_MONGODB_URL: mongodb://admin:password123@mongodb:27017/
      ME_CONFIG_BASICAUTH_USERNAME: admin
      ME_CONFIG_BASICAUTH_PASSWORD: admin123
    depends_on:
      - mongodb
    networks:
      - fashion_network

volumes:
  mongodb_data:
    driver: local

networks:
  fashion_network:
    driver: bridge
